
parameters:
  - name: VersionType
    displayName: "Select version type"
    type: string
    default: minor
    values:
    - none
    - minor
    - major
  - name: BuildMode
    displayName: 'Build Mode'
    type: string
    default: test
    values:
      - test
      - prod

pool:
  vmImage: ubuntu-latest


steps:
- task: UsePythonVersion@0
  displayName:  "Install Python"
  inputs:
    versionSpec: '3.8'
    addToPath: true
    architecture: 'x64'

- task: Bash@3
  displayName: "Install Python packages"
  inputs:
    targetType: 'inline'
    script: |
      pip install bumpversion
      pip install tox
      sudo apt-get install gcc libpq-dev -y
      sudo apt-get install python-dev  python-pip -y
      sudo apt-get install python3-dev python3-pip python3-venv python3-wheel -y
      pip3 install wheel

- task: Bash@3
  displayName: "Update Version using bumpversion"
  inputs:
    targetType: 'inline'
    script: |
      echo "Build mode: ${{ parameters.BuildMode }}"
      if [ "${{ parameters.BuildMode }}" = "prod" ]; then
              bumpversion "${{ parameters.VersionType }}"
          else
              bumpversion "${{ parameters.VersionType }}" --no-commit --no-tag --allow-dirty
          fi

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       echo -e "\n===== Preventive cleanup"
#           rm __pycache__ -rf
#           rm .pytest_cache -rf
#           rm .tox -rf
#           rm .pytest_cache -rf
#           rm tests/__pycache__ -rf
      
#           echo -e "\n===== Running Tox"
#           tox

- task: Bash@3
  displayName: "Update AIKey"
  inputs:
    targetType: 'inline'
    script: 'sed -i "/__AIkey__/c __AIkey__ = ''$(AIKEY)''" ./iotedgedev/__init__.py'

- task: Bash@3
  displayName: "Build wheel"
  inputs:
    targetType: 'inline'
    script: 'python setup.py bdist_wheel'

- task: Bash@3
  displayName: "Revert AIKey to Original"
  inputs:
    targetType: 'inline'
    script: 'sed -i "/__AIkey__/c __AIkey__ = ''$(TEST_AIKEY)''" ./iotedgedev/__init__.py'
- task: Bash@3
  displayName: "Buld Docker image"
  inputs:
    targetType: 'inline'
    script: './build-docker.sh iotedgetoolscontainerregistry.azurecr.io/public/iotedge/iotedgedev linux'
    workingDirectory: 'docker/tool'