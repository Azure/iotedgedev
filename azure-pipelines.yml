
parameters:
  - name: VersionType
    displayName: "Select version type"
    type: string
    default: minor
    values:
    - none
    - minor
    - major
  - name: BuildMode
    displayName: 'Build Mode'
    type: string
    default: test
    values:
      - test
      - prod

pool:
  vmImage: ubuntu-latest


steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      pip install bumpversion
      pip install tox

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "Build mode: ${{ parameters.BuildMode }}"
      if [ "${{ parameters.BuildMode }}" = "prod" ]; then
              bumpversion "${{ parameters.VersionType }}"
          else
              bumpversion "${{ parameters.VersionType }}" --no-commit --no-tag --allow-dirty
          fi

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo -e "\n===== Preventive cleanup"
          rm __pycache__ -rf
          rm .pytest_cache -rf
          rm .tox -rf
          rm .pytest_cache -rf
          rm tests/__pycache__ -rf
      
          echo -e "\n===== Running Tox"
          tox

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'sed -i "/__AIkey__/c __AIkey__ = ''$(AIKEY)''" ./iotedgedev/__init__.py'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'python setup.py bdist_wheel'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'git checkout -- ./iotedgedev/__init__.py'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'git checkout -- ./iotedgedev/__init__.py'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: './build-docker.sh iotedgetoolscontainerregistry.azurecr.io/public/iotedge/iotedgedev linux'
    workingDirectory: 'docker/tool'